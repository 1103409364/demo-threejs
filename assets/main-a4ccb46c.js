/* empty css              */import{S as F,A as H,a0 as P,a2 as W,P as b,W as v,a3 as E,i as G,a as h,r as x,K as p,M as L,U as q,k as j,q as A,p as I}from"./three.module-d5fa3ebf.js";import{O as T}from"./OrbitControls-5742bab2.js";import{S as U}from"./Stats-ef6ecf20.js";import{G as O}from"./lil-gui.esm-fc0b5e43.js";import{g as R}from"./index-21dc82eb.js";const w=document.querySelector("#app"),n=new F;n.add(new H(5));const e=new P;e.castShadow=!0;e.shadow.mapSize.width=512;e.shadow.mapSize.height=512;e.shadow.camera.near=.5;e.shadow.camera.far=100;n.add(e);const y=new W(e.shadow.camera);n.add(y);const i=new b(75,window.innerWidth/window.innerHeight,.1,1e3);i.position.z=7;const s=new v;s.setSize(window.innerWidth,window.innerHeight);s.shadowMap.enabled=!0;s.shadowMap.type=E;w==null||w.appendChild(s.domElement);new T(i,s.domElement);const k=new G(100,20),u=new h(k,new x);u.rotateX(-Math.PI/2);u.position.y=-1.75;u.receiveShadow=!0;n.add(u);const m=[new p,new p,new p,new p,new p],t=[new L,new q,new x,new j({}),new A],a=[new h(m[0],t[0]),new h(m[1],t[1]),new h(m[2],t[2]),new h(m[3],t[3]),new h(m[4],t[4])],c=new I().load(R("grid"));t[0].map=c;t[1].map=c;t[2].map=c;t[3].map=c;t[4].map=c;a[0].position.x=-8;a[1].position.x=-4;a[2].position.x=0;a[3].position.x=4;a[4].position.x=8;a[0].castShadow=!0;a[1].castShadow=!0;a[2].castShadow=!0;a[3].castShadow=!0;a[4].castShadow=!0;a[0].receiveShadow=!0;a[1].receiveShadow=!0;a[2].receiveShadow=!0;a[3].receiveShadow=!0;a[4].receiveShadow=!0;n.add(a[0]);n.add(a[1]);n.add(a[2]);n.add(a[3]);n.add(a[4]);window.addEventListener("resize",K,!1);const B=N();X();M();C();function C(){requestAnimationFrame(C),y.update(),B.update(),a.forEach(r=>{r.rotation.y+=.01}),M()}function M(){s.render(n,i)}function K(){i.aspect=window.innerWidth/window.innerHeight,i.updateProjectionMatrix(),s.setSize(window.innerWidth,window.innerHeight),M()}function N(){const r=new U;return w==null||w.appendChild(r.dom),r}function X(){const r=document.querySelector("#gui");if(!r)return;const l=new O({container:r}),d={color:e.color.getHex(),mapsEnabled:!0,shadowMapSizeWidth:512,shadowMapSizeHeight:512},f=l.addFolder("Light");f.addColor(d,"color").onChange(()=>{e.color.setHex(Number(d.color.toString().replace("#","0x")))}),f.add(e,"intensity",0,1,.01);const o=l.addFolder("SpotLight");o.add(e,"distance",0,100,.01),o.add(e,"decay",0,4,.1),o.add(e,"angle",0,1,.1),o.add(e,"penumbra",0,1,.1),o.add(e.shadow.camera,"near",.1,100).onChange(()=>e.shadow.camera.updateProjectionMatrix()),o.add(e.shadow.camera,"far",.1,100).onChange(()=>e.shadow.camera.updateProjectionMatrix()),o.add(d,"shadowMapSizeWidth",[256,512,1024,2048,4096]).onChange(()=>z()),o.add(d,"shadowMapSizeHeight",[256,512,1024,2048,4096]).onChange(()=>z()),o.add(e.position,"x",-50,50,.01),o.add(e.position,"y",-50,50,.01),o.add(e.position,"z",-50,50,.01),o.open();function z(){e.shadow.mapSize.width=d.shadowMapSizeWidth,e.shadow.mapSize.height=d.shadowMapSizeHeight,e.shadow.map=null}l.addFolder("Meshes").add(d,"mapsEnabled").onChange(()=>{t.forEach(g=>{d.mapsEnabled?g.map=c:g.map=null,g.needsUpdate=!0})});const S=l.addFolder("Camera");S.add(i.position,"x",-10,10,.01),S.add(i.position,"y",-10,10,.01),S.add(i.position,"z",-10,10,.01)}
