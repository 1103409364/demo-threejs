var k=Object.defineProperty;var C=(h,e,t)=>e in h?k(h,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):h[e]=t;var l=(h,e,t)=>(C(h,typeof e!="symbol"?e+"":e,t),t);import{ak as v,M as O,b as x,B as g,i as G,c as _,V as f,ac as E,a as d,am as V}from"./three.module-d5fa3ebf.js";import{V as b,Q as z,S as H,B as I,b as S,P as T,C as B,T as R,H as L,c as y}from"./cannon-es-36f8ef45.js";class N{constructor(e,t,s){l(this,"scene");l(this,"world");l(this,"_meshes");l(this,"_material");l(this,"_particleMaterial",new v);l(this,"_sphereGeometry");l(this,"_boxGeometry");l(this,"_planeGeometry");l(this,"_particleGeometry");l(this,"tmpVec0",new b);l(this,"tmpVec1",new b);l(this,"tmpVec2",new b);l(this,"tmpQuat0",new z);this.scene=e,this.world=t,this._meshes=[],this._material=new O({color:65280,wireframe:!0}),this._particleMaterial=new v({color:16711680,size:10,sizeAttenuation:!1,depthTest:!1}),this._sphereGeometry=new x(1),this._boxGeometry=new g(1,1,1),this._planeGeometry=new G(10,10,10,10),this._particleGeometry=new _,this._particleGeometry.setFromPoints([new f(0,0,0)])}update(){const e=this.world.bodies,t=this._meshes,s=this.tmpVec0,n=this.tmpQuat0;let r=0;for(let a=0;a!==e.length;a++){const o=e[a];for(let c=0;c!==o.shapes.length;c++){const w=o.shapes[c];this._updateMesh(r,o,w);const i=t[r];i&&(o.quaternion.vmult(o.shapeOffsets[c],s),o.position.vadd(s,s),o.quaternion.mult(o.shapeOrientations[c],n),i.position.x=s.x,i.position.y=s.y,i.position.z=s.z,i.quaternion.x=n.x,i.quaternion.y=n.y,i.quaternion.z=n.z,i.quaternion.w=n.w),r++}}for(let a=r;a<t.length;a++){const o=t[a];o&&this.scene.remove(o)}t.length=r}_updateMesh(e,t,s){let n=this._meshes[e];this._typeMatch(n,s)||(n&&this.scene.remove(n),n=this._meshes[e]=this._createMesh(s)),this._scaleMesh(n,s)}_typeMatch(e,t){if(!e)return!1;const s=e.geometry;return s instanceof x&&t instanceof H||s instanceof g&&t instanceof I||s instanceof E&&t instanceof S||s instanceof G&&t instanceof T||t instanceof B||s.id===t.id&&t instanceof R||s.id===t.id&&t instanceof L}_createMesh(e){let t,s,n,r,a;const o=this._material;let c=[];switch(e.type){case y.types.SPHERE:t=new d(this._sphereGeometry,o);break;case y.types.BOX:t=new d(this._boxGeometry,o);break;case y.types.CYLINDER:s=new E(e.radiusTop,e.radiusBottom,e.height,e.numSegments),t=new d(s,o);break;case y.types.PLANE:t=new d(this._planeGeometry,o);break;case y.types.PARTICLE:t=new V(this._particleGeometry,this._particleMaterial);break;case y.types.CONVEXPOLYHEDRON:s=new _,e.id=s.id,c=[];for(let i=0;i<e.vertices.length;i+=1){const m=e.vertices[i];c.push(new f(m.x,m.y,m.z))}s.setFromPoints(c);const w=[];for(let i=0;i<e.faces.length;i++){const m=e.faces[i],p=m[0];for(let u=1;u<m.length-1;u++){const M=m[u],P=m[u+1];w.push(p,M,P)}}s.setIndex(w),t=new d(s,o);break;case y.types.TRIMESH:s=new _,e.id=s.id,c=[];for(let i=0;i<e.vertices.length;i+=3)c.push(new f(e.vertices[i],e.vertices[i+1],e.vertices[i+2]));s.setFromPoints(c),t=new d(s,o);break;case y.types.HEIGHTFIELD:s=new _,n=this.tmpVec0,r=this.tmpVec1,a=this.tmpVec2;for(let i=0;i<e.data.length-1;i++)for(let m=0;m<e.data[i].length-1;m++)for(let p=0;p<2;p++)e.getConvexTrianglePillar(i,m,p===0),n.copy(e.pillarConvex.vertices[0]),r.copy(e.pillarConvex.vertices[1]),a.copy(e.pillarConvex.vertices[2]),n.vadd(e.pillarOffset,n),r.vadd(e.pillarOffset,r),a.vadd(e.pillarOffset,a),c.push(new f(n.x,n.y,n.z),new f(r.x,r.y,r.z),new f(a.x,a.y,a.z));s.setFromPoints(c),t=new d(s,o),e.id=s.id;break;default:t=new d;break}return t&&t.geometry&&this.scene.add(t),t}_scaleMesh(e,t){let s,n,r;switch(t.type){case y.types.SPHERE:s=t.radius,e.scale.set(s,s,s);break;case y.types.BOX:n=t.halfExtents,e.scale.copy(new f(n.x,n.y,n.z)),e.scale.multiplyScalar(2);break;case y.types.CONVEXPOLYHEDRON:e.scale.set(1,1,1);break;case y.types.TRIMESH:r=t.scale,e.scale.copy(new f(r.x,r.y,r.z));break;case y.types.HEIGHTFIELD:e.scale.set(1,1,1);break}}}export{N as C};
